apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: log-collector
spec:
  mode: daemonset
  image: otel/opentelemetry-collector-contrib:0.114.0
  serviceAccount: otelcol-sa
  volumes:
    - hostPath:
        path: /var/log/pods
        type: ""
      name: varlogpods
  volumeMounts:
    - mountPath: /var/log/pods
      name: varlogpods
      readOnly: true
  env:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
  config:
    receivers:
      prometheus:
        config:
          scrape_configs:
            - job_name: "otel-collector"
              scrape_interval: 5s
              static_configs:
                - targets: ["${env:MY_POD_IP}:8888"]
      filelog:
        # exclude:
        #   - /var/log/pods/otelcol_otelcol-opentelemetry-collector*_*/opentelemetry-collector/*.log
        include:
          - /var/log/pods/*/*/*.log
        include_file_name: false
        include_file_path: true
        operators:
          - id: container-parser
            max_log_size: 102400
            type: container
        retry_on_failure:
          enabled: true
        start_at: end
    exporters:
      debug:
        verbosity: basic
      otlp:
        endpoint: collector-with-ta-collector.otelcol.svc:4317
        tls:
          insecure: true

    processors:
      batch: {}
      k8sattributes:
        extract:
          annotations:
            - from: pod
              key_regex: (.*)
              tag_name: $$1
          labels:
            - from: pod
              key_regex: (.*)
              tag_name: $$1
          metadata:
            - k8s.namespace.name
            - k8s.deployment.name
            - k8s.statefulset.name
            - k8s.daemonset.name
            - k8s.cronjob.name
            - k8s.job.name
            - k8s.node.name
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.pod.start_time
        passthrough: false
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
          - sources:
              - from: connection
      resource:
        attributes:
          - action: insert
            from_attribute: k8s.pod.uid
            key: service.instance.id
      resourcedetection:
        detectors:
          - gcp
        timeout: 10s

    service:
      telemetry:
        metrics:
          level: detailed
          readers:
            - pull:
                exporter:
                  prometheus:
                    host: ${env:MY_POD_IP}
                    port: 8888
      pipelines:
        logs:
          receivers:
            - filelog
          processors:
            - k8sattributes
            - batch
            - resource
            - resourcedetection
          exporters:
            - otlp
